<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.dcs.parent</artifactId>
		<groupId>org.dcs</groupId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>org.dcs.web</artifactId>
	<packaging>war</packaging>
	<name>org.dcs.web</name>

	<properties>
		<vaadin.version>7.5.10</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		<jetty.plugin.version>9.2.3.v20140905</jetty.plugin.version>
		<!--<project.encoding>UTF-8</project.encoding> -->
		<jetty-version>9.3.7.v20160115</jetty-version>
		<slf4j-version>1.6.3</slf4j-version>
		<junit-version>4.8.1</junit-version>
		<pax.cdi.version>0.12.0</pax.cdi.version>
		<default.data.root.parent.path>${user.home}</default.data.root.parent.path>
		<test.data.root.parent.path>${project.build.directory}</test.data.root.parent.path>
	</properties>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory). 
			For widgetset compilation, vaadin-client-compiler is automatically added 
			on the compilation classpath by vaadin-maven-plugin so normally there is 
			no need for an explicit dependency. -->
		<!-- <dependency> <groupId>com.vaadin</groupId> <artifactId>vaadin-client-compiler</artifactId> 
			<scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>
		<!-- OSGi Dependencies Start -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.websocket</groupId>
			<artifactId>javax.websocket-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.framework</artifactId>
			<version>5.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.http.proxy</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.http.bridge</artifactId>
			<version>3.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.webconsole</artifactId>
			<version>4.2.14</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.cmpn</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.service.log</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20151123</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
		</dependency>
		<!-- OSGi Dependencies Start -->

		<!-- Override older asm dependency in swagger-jersey-jaxrs for vaadin widgetset 
			compilation -->
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm</artifactId>
			<version>5.0.3</version>
			<scope>compile</scope>
		</dependency>

		<!-- Swagger JAX-RS Jersey Dependencies Start -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<!-- if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core" -->
			<artifactId>jersey-container-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
		</dependency>

		<!-- Required only when you are using JAX-RS Client -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.bundles</groupId>
			<artifactId>jaxrs-ri</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8.8</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
				<exclusion>
					<artifactId>snakeyaml</artifactId>
					<groupId>org.yaml</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bsh</artifactId>
					<groupId>org.beanshell</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Swagger JAX-RS Jersey Dependencies End -->

		<dependency>
			<groupId>org.dcs</groupId>
			<artifactId>org.dcs.api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.dcs</groupId>
			<artifactId>org.dcs.core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.dcs</groupId>
			<artifactId>org.dcs.test</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.8.0</version>
			<scope>test</scope>
		</dependency>

		<!-- PAX-CDI WELD-OSGI Bundles - Start -->
		<dependency>
			<groupId>org.jboss.classfilewriter</groupId>
			<artifactId>jboss-classfilewriter</artifactId>
			<version>1.1.2.Final</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>3.3.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.ops4j.base</groupId>
			<artifactId>ops4j-base-lang</artifactId>
			<version>1.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.swissbox</groupId>
			<artifactId>pax-swissbox-core</artifactId>
			<version>1.8.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xbean</groupId>
			<artifactId>xbean-bundleutils</artifactId>
			<version>4.5</version>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.cdi</groupId>
			<artifactId>pax-cdi-api</artifactId>
			<version>${pax.cdi.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.cdi</groupId>
			<artifactId>pax-cdi-spi</artifactId>
			<version>${pax.cdi.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.cdi</groupId>
			<artifactId>pax-cdi-extension</artifactId>
			<version>${pax.cdi.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.cdi</groupId>
			<artifactId>pax-cdi-extender</artifactId>
			<version>${pax.cdi.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.cdi</groupId>
			<artifactId>pax-cdi-weld</artifactId>
			<version>${pax.cdi.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-osgi-bundle</artifactId>
			<version>2.3.2.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- PAX-CDI WELD-OSGI Bundles - End -->
		<dependency>
			<groupId>org.jboss.modules</groupId>
			<artifactId>jboss-modules</artifactId>
			<version>1.4.3.Final</version>
		</dependency>

	</dependencies>

	<build>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<!--<encoding>${project.encoding}</encoding> -->
					<source>${project.source.version}</source>
					<target>${project.target.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-bundles</id>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeArtifactIds>
								org.apache.felix.webconsole,
								org.apache.felix.http.bridge,
								org.apache.felix.scr,
								org.dcs.core,
								pax-cdi-api,
								pax-cdi-spi,
								pax-cdi-extender,
								pax-cdi-extension,
								pax-cdi-weld,
								weld-osgi-bundle
							</includeArtifactIds>
							<!--<stripVersion>true</stripVersion> -->
							<outputDirectory>
								${project.build.directory}/bundles
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- Exclude some unnecessary files generated by the GWT compiler. -->
					<packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
						WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**
					</packagingExcludes>
					<webResources>
						<resource>
							<directory>
								${project.build.directory}/bundles
							</directory>
							<targetPath>WEB-INF/bundles</targetPath>
						</resource>
						<resource>
							<directory>
								ui/app
							</directory>
							<targetPath>./app</targetPath>
						</resource>
						<resource>
							<directory>.</directory>
							<targetPath>META-INF</targetPath>
							<includes>
								<include>LICENSE</include>
								<include>NOTICE</include>
							</includes>
						</resource>
					</webResources>
					<webappDirectory>${project.build.directory}/dcs</webappDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
					<draftCompile>false</draftCompile>
					<compileReport>false</compileReport>
					<style>OBF</style>
					<strict>true</strict>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<!-- disabled by default to use on-the-fly theme compilation -->
							<!-- <goal>compile-theme</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<!-- Clean up also any pre-compiled themes -->
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/themes</directory>
							<includes>
								<include>**/styles.css</include>
								<include>**/styles.scss.cache</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- The Jetty plugin allows us to easily test the development build by 
				running jetty:run on the command line. -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
					<jvmArgs>-Xdebug -agentlib:jdwp=transport=dt_socket,address=5050,server=y,suspend=n</jvmArgs>
					<systemProperties>
						<systemProperty>
							<name>config</name>
							<value>${project.build.testOutputDirectory}/org/dcs/config/config.yaml</value>
						</systemProperty>
					</systemProperties>
					<stopKey>stopKey</stopKey>
					<stopPort>9091</stopPort>
					<scanIntervalSeconds>2</scanIntervalSeconds>
					<httpConnector>
						<port>9090</port>
					</httpConnector>
					<webApp>
						<baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
							<resourcesAsCSV>${basedir}/src/main/webapp,${project.build.directory}/dcs</resourcesAsCSV>
						</baseResource>
						<contextPath>/dcs</contextPath>
					</webApp>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<!-- <configuration> -->
						<!-- <scanIntervalSeconds>0</scanIntervalSeconds> -->
						<!-- </configuration> -->
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<!-- TODO Remove when http://dev.vaadin.com/ticket/14924 is resolved -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>
											vaadin-maven-plugin
										</artifactId>
										<versionRange>[7.1.11,)</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>update-widgetset</goal>
											<goal>compile</goal>
											<goal>compile-theme</goal>
											<goal>update-theme</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


</project>
